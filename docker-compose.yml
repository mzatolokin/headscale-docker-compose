services:
  traefik:
    image: traefik:${TRAEFIK_IMAGE_TAG:-latest}
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=false
      - --ping=true
      - --ping.entrypoint=traefik
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:9000
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --log.level=${TRAEFIK_LOG_LEVEL:-INFO}
      - --accesslog=true
    ports:
      - "80:80"
      - "443:443"
      - "3478:3478/udp"  # DERP STUN
    environment:
      - TRAEFIK_ACME_DNS01=${TRAEFIK_ACME_DNS01:-false}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/acme.json:/acme.json
      - ./data/traefik/users:/etc/traefik/users:ro
    networks:
      - edge
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redirect.rule=Host(`${HEADSCALE_FQDN}`)"
      - "traefik.http.routers.redirect.entrypoints=web"
      - "traefik.http.routers.redirect.middlewares=redirectscheme@docker"
      - "traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.routers.redirect.service=noop@internal"

  headscale:
    image: headscale/headscale:${HEADSCALE_IMAGE_TAG:-latest}
    container_name: headscale
    restart: unless-stopped
    depends_on:
      - traefik
    command: ["serve"]
    volumes:
      - ./data/headscale:/var/lib/headscale
      - ./headscale/config.yaml:/etc/headscale/config.yaml:ro
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headscale.rule=Host(`${HEADSCALE_FQDN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.headscale.entrypoints=websecure"
      - "traefik.http.routers.headscale.tls=true"
      - "traefik.http.routers.headscale.tls.certresolver=le"
      - "traefik.http.services.headscale.loadbalancer.server.port=8080"

      # CORS for Headscale API requests
      # Comment this if you want to use the UI on same domain as headscale
      - "traefik.http.middlewares.hs-cors.headers.accessControlAllowOriginList=${HEADSCALE_UI_FQDN}"
      - "traefik.http.middlewares.hs-cors.headers.accessControlAllowMethods=GET,POST,PUT,PATCH,DELETE,OPTIONS"
      - "traefik.http.middlewares.hs-cors.headers.accessControlAllowHeaders=Authorization,Content-Type,Accept,Origin"
      - "traefik.http.middlewares.hs-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.hs-cors.headers.addVaryHeader=true"

      # Apply CORS middleware to headscale API
      - "traefik.http.routers.headscale.middlewares=hs-cors@docker"

networks:
  edge:
    driver: bridge
  internal:
    driver: bridge
    internal: true